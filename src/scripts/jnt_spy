#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""Spyer for Janitoo
"""
__license__ = """
    This file is part of Janitoo.

    Janitoo is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    Janitoo is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with Janitoo. If not, see <http://www.gnu.org/licenses/>.

"""
__author__ = 'Sébastien GALLET aka bibi21000'
__email__ = 'bibi21000@gmail.com'
__copyright__ = "Copyright © 2013-2014-2015 Sébastien GALLET aka bibi21000"

import sys
import argparse

from janitoo.mqtt import MQTTBasic

def on_connect(mqttc, obj, flags, rc):
    print("!!!!!! Connect rc : "+str(rc))

def on_message(mqttc, obj, msg):
    print(msg.topic+" "+str(msg.qos)+" "+str(msg.payload))

def on_subscribe(mqttc, obj, mid, granted_qos):
    print("!!!!!! Subscribed to "+str(obj)+" : "+str(mid)+" "+str(granted_qos))
    print("!!!!!! Type Ctrl+C 2 times to exit !!!!!! ")

def on_log(mqttc, obj, level, string):
    print("###### Log : "+str(string))

def jnt_parser():
    parser = argparse.ArgumentParser()
    parser.add_argument('--host', action='store', help='The host of the mosquitto server', default='127.0.0.1')
    parser.add_argument('--port', action='store', help='The port of the mosquitto server', default='1883')
    parser.add_argument('--topic', action='store', help='The topic to listen to', default='/#')
    return parser

def main():
    parser = jnt_parser()
    args = parser.parse_args()
    mqttc = MQTTBasic()
    mqttc.on_message = on_message
    mqttc.on_connect = on_connect
    mqttc.on_subscribe = on_subscribe
    # Uncomment to enable debug messages
    #mqttc.on_log = on_log
    mqttc.connect(args.host, args.port, 60)
    print(">>>>>> Subscribe to "+str(args.topic))
    mqttc.subscribe(args.topic, 0)

    mqttc.loop_forever()

if __name__ == '__main__':
    main()

